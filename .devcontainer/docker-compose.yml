version: "3.9"
services:
  app:
    container_name: "template-dev-app"
    platform: "linux/amd64"
    build:
      context: "../"
      dockerfile: ".devcontainer/docker/node/Dockerfile"
    image: "node22-dev"
    tty: true
    volumes:
      - "../:/workspace:delegated"
      - "template-dev_node_modules:/workspace/node_modules"
      - "template-dev_react-router:/workspace/.react-router"
      - "template-dev_playwright:/workspace/.playwright"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    env_file:
      - path: "./.env"
        required: false
    environment:
      - "LOCALHOST=${LOCALHOST:-host.docker.internal}"
      - "TZ=${TZ:-UTC}"
      - "DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-template}"
    command: "bash -c 'sh /workspace/.devcontainer/postCreatedCommand.sh && npm i && npm run migrate && npm run dev && bash'"
    networks:
      - "template-dev"
    depends_on:
      - "postgres"
  postgres:
    container_name: "template-dev-postgres"
    image: postgres:17-bookworm
    restart: always
    volumes:
      - "template-dev_postgres:/var/lib/postgresql/data"
      - "../database/postgres/init:/docker-entrypoint-initdb.d"
    env_file:
      - path: "./.env"
        required: false
    environment:
      - "TZ=${TZ:-UTC}"
      - "POSTGRES_USER=${POSTGRES_USER:-postgres}"
      - "POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}"
      - "POSTGRES_DB=${POSTGRES_DB:-template}"
    # ports: # 外部ツールから接続する場合はコメントアウトを外す
    #   - "${POSTGRES_PORT:-5432}:5432"
    command: >
      postgres
      -c "port=5432"
      -c "log_destination=stderr"
      -c "log_min_messages=${POSTGRES_LOG_LEVEL:-WARNING}"
      -c "log_connections=on"
      -c "log_disconnections=on"
      -c "log_statement=all"
    networks:
      - "template-dev"
networks:
  template-dev:
    name: "template-dev"
    driver: "bridge"
volumes:
  template-dev_node_modules:
  template-dev_react-router:
  template-dev_playwright:
  template-dev_postgres:
