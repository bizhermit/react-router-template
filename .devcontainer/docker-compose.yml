version: '3.8'
services:
  node:
    container_name: 'node22_dev'
    env_file:
      - path: '../.env'
        required: false
      - path: '../.env.local'
        required: false
    build:
      context: '../'
      dockerfile: '.devcontainer/docker/node/Dockerfile'
    image: 'template_dev'
    tty: true
    volumes:
      - '../:/workspace:delegated'
      - 'template_node_dev_node_modules:/workspace/node_modules'
      - 'template_node_dev_react-router:/workspace/.react-router'
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    environment:
      - 'TZ=${TZ:-UTC}'
      - 'WATCHPACK_POLLING=true'
      - 'LOCALHOST=${LOCALHOST:-host.docker.internal}'
      - 'DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@postgres:${POSTGRES_PORT:-5432}/${POSTGRES_DB:-template}'
    command: bash -c 'sh /workspace/.devcontainer/postCreatedCommand.sh && npm i && npm run migrate && npm run dev && bash'
    networks:
      - template_dev
    depends_on:
      - postgres
  postgres:
    container_name: 'template_database_dev'
    env_file:
      - path: '../.env'
        required: false
      - path: '../.env.local'
        required: false
    build:
      context: '../'
      dockerfile: '.devcontainer/docker/postgres/Dockerfile'
    image: 'template_database_dev'
    restart: always
    volumes:
      - 'template_database_dev:/var/lib/postgresql/data'
      - '../database/postgres/init:/docker-entrypoint-initdb.d'
    environment:
      - 'TZ=${TZ:-UTC}'
      - 'POSTGRES_USER=${POSTGRES_USER:-postgres}'
      - 'POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}'
      - 'POSTGRES_DB=${POSTGRES_DB:-template}'
      - 'POSTGRES_PORT=${POSTGRES_PORT:-5432}'
    # ports:
    #   - '${POSTGRES_PORT:-5432}:${POSTGRES_PORT:-5432}'
    healthcheck:
      test: [ 'CMD', 'pg_isready' ]
      interval: 10s
      timeout: 5s
      retries: 3
    command: 'postgres -c log_destination=stderr -c log_statement=all -c log_connections=on -c log_disconnections=on'
    networks:
      - template_dev
networks:
  template_dev:
    name: template_dev
    driver: bridge
volumes:
  template_node_dev_node_modules:
  template_node_dev_react-router:
  template_database_dev:
