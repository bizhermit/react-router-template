version: "3.9"
services:
  app:
    container_name: "template-app"
    platform: "linux/amd64"
    build:
      context: "../"
      dockerfile: ".container/docker/node/Dockerfile"
    image: "template-app"
    tty: true
    extra_hosts:
      - "host.docker.internal:host-gateway"
    env_file:
      - path: "./.env"
        required: false
    environment:
      - "TZ=${TZ:-UTC}"
      - "PORT=3000"
      - "DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-template}"
      - "WAITFOR=postgres:5432"
    ports:
      - "${PORT:-3000}:3000"
    networks:
      - "template"
    depends_on:
      - "postgres"
  postgres:
    container_name: "template-postgres"
    image: "postgres:17-bookworm"
    restart: "always"
    user: "postgres"
    volumes:
      - "template_postgres:/var/lib/postgresql/data"
      - "../database/postgres/init:/docker-entrypoint-initdb.d"
    env_file:
      - path: "./.env"
        required: false
    environment:
      - "TZ=${TZ:-UTC}"
      - "POSTGRES_USER=${POSTGRES_USER:-postgres}"
      - "POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}"
      - "POSTGRES_DB=${POSTGRES_DB:-template}"
    # ports: # 外部ツールから接続する場合はコメントアウトを外す
    #   - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}" ]
      interval: "30s"
      timeout: "5s"
      retries: 3
    security_opt:
      - "no-new-privileges:true"
    cap_drop:
      - "ALL"
    cap_add:
      - "CHOWN"
      - "DAC_OVERRIDE"
      - "FOWNER"
      - "SETGID"
      - "SETUID"
    command: >
      postgres
      -c "port=5432"
      -c "log_destination=stderr"
      -c "log_min_messages=${POSTGRES_LOG_LEVEL:-FATAL}"
      -c "log_connections=off"
      -c "log_disconnections=off"
      -c "log_statement=none"
    networks:
      - "template"
networks:
  template:
    name: "template"
    driver: "bridge"
volumes:
  template_postgres:
