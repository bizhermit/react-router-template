/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/health": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
        /** ヘルスチェック */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
                            /** @example 2025-01-01T00:00:00.000Z */
              now?: string;
            };
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/sandbox/api": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
        /** 一覧の取得 */
    get: {
      parameters: {
        query?: {
          limit?: number;
          page?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
                /** @description 一覧取得成功 */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
                            /**
                             * @default 1
                             * @example 1
                             */
              page: number;
                            /** @example 100 */
              total: number;
              items: {
                                /** @example abc123 */
                id: string;
                                /** @example title */
                title: string;
                                /** @example body */
                body: string;
                                /** @example 2025-01-01T00:00:00.000Z */
                updatedAt: string;
              }[];
            };
          };
        };
      };
    };
    put?: never;
        /** 詳細作成 */
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json": {
                        /** @example title */
            title: string;
                        /** @example body */
            body: string;
                        /** @example 2025-01-01T00:00:00.000Z */
            updatedAt: string;
          };
        };
      };
      responses: {
                /** @description 作成成功 */
        201: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
                            /** @example abc123 */
              id: string;
                            /** @example title */
              title: string;
                            /** @example body */
              body: string;
                            /** @example 2025-01-01T00:00:00.000Z */
              updatedAt: string;
            };
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/sandbox/api/{id}": {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
        /** 詳細取得 */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          id: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
                /** @description 詳細取得成功 */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
                            /** @example abc123 */
              id: string;
                            /** @example title */
              title: string;
                            /** @example body */
              body: string;
                            /** @example 2025-01-01T00:00:00.000Z */
              updatedAt: string;
            };
          };
        };
                /** @description 詳細取得失敗 */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
        /** 詳細更新 */
    put: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          id: string;
        };
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json": {
                        /** @example title */
            title: string;
                        /** @example body */
            body: string;
                        /** @example 2025-01-01T00:00:00.000Z */
            updatedAt: string;
          };
        };
      };
      responses: {
                /** @description 詳細更新成功 */
        201: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
                            /** @example abc123 */
              id: string;
                            /** @example title */
              title: string;
                            /** @example body */
              body: string;
                            /** @example 2025-01-01T00:00:00.000Z */
              updatedAt: string;
            };
          };
        };
      };
    };
    post?: never;
        /** 詳細削除 */
    delete: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          id: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
                /** @description 削除成功 */
        204: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: never;
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
